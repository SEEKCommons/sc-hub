.pt-card.pt-elevation-4.devise-card
  %h2= t '.my_account'
  = form_for reader, url: :profile, builder: BlueprintFormBuilder do |f|
    = f.errors

    = f.form_group :name

    = f.form_group :locale do |f, error_classes|
      .pt-select.pt-fill{ class: error_classes }
        = f.select :locale, options_for_select(locale_names, I18n.locale)

    = f.form_group :email do |f, error_classes|
      = f.email_field :email, class: (%w[pt-input pt-fill] + error_classes),
                              spellcheck: false

    .reader-image-input
      - helper = t 'helpers.attachments.max_size.ruby',
                   size: number_to_human_size(2.megabytes)
      = f.form_group :image, helper_text: helper do |f|
        = f.file_field :image, class: %w[pt-fill], direct_upload: true

      %img{ src: reader.image_url }

    %h2= t '.notification_settings'

    %div{ style: 'padding-bottom: 1em'}
      = f.check_box :send_reply_notifications

    = f.submit t('.save'), class: %w[pt-intent-primary]

  - if reader.created_password
    .devise-links
      %p
        =link_to t('devise.passwords.edit.change_my_password'),
                 edit_reader_registration_path
  - else
    %h2= t '.create_a_password'
    = form_for reader, url: :profile, builder: BlueprintFormBuilder do |f|
      %p.pt-text-muted
        = t '.you_have_not_created_a_password',
            provider: I18n.t("devise.providers.#{reader.providers.first}")

      = f.form_group :password do |f, error_classes|
        = f.password_field :password,
                           class: %w[pt-input pt-fill] + error_classes

      = f.submit t('.create_a_password'), class: %w[pt-intent-none]

= javascript_pack_tag 'file_upload'
