// flow-typed signature: e497ee64d64e595ae08ceae32c4ea488
// flow-typed version: <<STUB>>/draft-js_v0.10/flow_v0.38.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'draft-js'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

import type { List, OrderedMap, Record } from 'immutable'

declare module 'draft-js' {
  declare export function convertToRaw (ContentState): Object

  declare export class ContentState {
    getBlockMap(): ContentBlock[],
    getBlocksAsArray(): ContentBlock[],
    getEntity(string): DraftEntity,
    set(string, mixed): ContentState,
  }

  declare export class ContentBlock {
    getDepth(): number,
    getKey(): string,
    getText(): string,
    set(string, mixed): ContentBlock,
  }

  declare export type DraftDecoratorType = {
    getDecorations: (
      block: ContentBlock,
      contentState: ContentState
    ) => List<?string>,
    getComponentForKey: (key: string) => Function,
    getPropsForKey: (key: string) => ?Object,
  }

  declare export class DraftEntity {
    getData(): Object,
  }

  declare export class Editor<D, P, S> extends React$Component<D, P, S> {}

  declare export class EditorState {
    static create(config: Object): EditorState,
    static createEmpty(decorator?: ?DraftDecoratorType): EditorState,
    static createWithContent(
      contentState: ContentState,
      decorator?: ?DraftDecoratorType
    ): EditorState,
    static set(editorState: EditorState, put: Object): EditorState,
    getCurrentContent(): ContentState,
    getSelection(): SelectionState,
    toJS(): Object,
  }

  declare export class RichUtils {
    static handleKeyCommand(
      editorState: EditorState,
      command: string
    ): ?EditorState,
  }

  declare export class SelectionState {
    anchorKey: string,
    anchorOffset: number,
    focusKey: string,
    focusOffset: number,
    isBackward: boolean,
    hasFocus: boolean,
    serialize(): string,
    getAnchorKey(): string,
    getAnchorOffset(): number,
    getFocusKey(): string,
    getFocusOffset(): number,
    getIsBackward(): boolean,
    getHasFocus(): boolean,
    hasEdgeWithin(blockKey: string, start: number, end: number): boolean,
    isCollapsed(): boolean,
    getStartKey(): string,
    getStartOffset(): number,
    getEndKey(): string,
    getEndOffset(): number,
    static createEmpty(key: string): SelectionState,
  }
}
